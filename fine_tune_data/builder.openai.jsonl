{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, post a tweet about love."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Hey Billy, post a tweet about love.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"What did you want to tweet about love?\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Okay Billy, what will the weather be like tomorrow in Paris."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Okay Billy, what will the weather be like tomorrow in Paris.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"weather tomorrow in Paris\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy, can you post a tweet saying 'Good morning everyone!'?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, can you post a tweet saying 'Good morning everyone!'?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"Please confirm the tweet text: 'Good morning everyone!'\",\"text\":\"Good morning everyone!\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, please increase the volume."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, please increase the volume.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"volume.up\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, I want to send a message on Discord saying 'Hello everyone!'."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"I want to send a message on Discord saying 'Hello everyone!'.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"Please confirm your Discord message: 'Hello everyone!'\",\"text\":\"Hello everyone!\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"What's the weather like in Tokyo?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"What's the weather like in Tokyo?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"weather in Tokyo\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Ok Billy calculate the integral of sine x from 0 to pi."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Calculate the integral of sin(x) from 0 to pi.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"integral of sin(x) from 0 to pi\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"What's the current stock price of Apple?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"What's the current stock price of Apple?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"Apple stock price\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Tell me about the Eiffel Tower."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Tell me about the Eiffel Tower.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"The Eiffel Tower is an iconic iron structure in Paris, France, known for its towering height and lattice design.\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy Find a cooking tutorial on YouTube and share it on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Find a cooking tutorial on YouTube and share it on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"cooking tutorial\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"I found this great cooking tutorial on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Find a music video about space on YouTube and tweet it."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Find a random music video about space on YouTube and tweet it.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"space music video\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"text\": \"Check out this cool space music video I found on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Show me a random GIF about space."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Show me a random GIF about space.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"giphy.search\",\"query\": \"space\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"text\": \"Here's a random space GIF from Giphy.\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Find me a cool coffee GIF, Billy."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Find me a cool coffee GIF, Billy.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"giphy.search\",\"query\": \"coffee\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"output.tts\",\"text\": \"Check out this cool coffee GIF I found on Giphy.\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Give me a random car fact."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Give me a random car fact.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"Did you know that the first recorded car accident occurred in 1886 in New York City? It involved two vehicles, and luckily, no one was injured as cars were not moving very fast back then.\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, find a good pasta recipe video on YouTube and share it on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, find a good pasta recipe video on YouTube and share it on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"pasta recipe\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"Check out this pasta recipe video on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy, can you turn up the volume?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, can you turn up the volume?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"volume.up\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Tell me something interesting about the Statue of Liberty."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Tell me something interesting about the Statue of Liberty.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"The Statue of Liberty was a gift from France to the United States in 1886.\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Ok Billy, can you search for a DIY home decoration tutorial on YouTube?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Ok Billy, can you search for a DIY home decoration tutorial on YouTube?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"DIY home decoration tutorial\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"Check out this DIY decoration video I found:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"output.tts\",\"text\": \"I posted it in the Discord for you.\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, find the trailer for Inception on YouTube and share it in our Discord channel."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, find the trailer for Inception on YouTube and share it in our Discord channel.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"Inception movie trailer\",\"shuffle\": false,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"Here's the trailer for 'Inception' I found on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Find me a horror movie trailer on YouTube and tweet it for our Halloween special."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Find me a horror movie trailer on YouTube and tweet it for our Halloween special.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"horror movie trailer\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"text\": \"Get ready for a scare! Here's a horror movie trailer perfect for our Halloween special:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy turn up the volume and post a car meme to Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Yo Billy turn up the volume and post a car meme to Discord.\",\"outputs\": [\"2\", \"3\"]},\"2\": {\"type\": \"volume.up\"},\"3\": {\"type\": \"giphy.search\",\"query\": \"car meme\",\"shuffle\": true,\"outputs\": [\"4\"]},\"4\": {\"type\": \"discord.post\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy turn down music and post joker meme to Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Yo Billy turn down music and post joker meme to Discord.\",\"outputs\": [\"2\", \"3\"]},\"2\": {\"type\": \"volume.down\"},\"3\": {\"type\": \"giphy.search\",\"query\": \"joker meme\",\"shuffle\": true,\"outputs\": [\"4\"]},\"4\": {\"type\": \"discord.post\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy, find out what the price of gold is and post it to the Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Yo Billy, find out what the price of gold is and post it to the Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.alpha\",\"query\": \"What is the price of gold?\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, what's the current stock price of Tesla?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Hey Billy, what's the current stock price of Tesla?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"Tesla stock price\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Okay Billy, what's the weather like in Miami today? Can you share it on Discord?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, what's the weather like in Miami today? Can you share it on Discord?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"wolfram.simple\",\"query\": \"Miami weather\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"Here's the weather for Miami today:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, can you increase the volume and then find some jazz music on YouTube?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Hey Billy, can you increase the volume and then find some jazz music on YouTube?\",\"outputs\": [\"2\", \"3\"]},\"2\": {\"type\": \"volume.up\"},\"3\": {\"type\": \"youtube.search\",\"query\": \"jazz music\",\"shuffle\": true,\"outputs\": [\"4\"]},\"4\": {\"type\": \"output.tts\",\"text\": \"I've increased the volume and here's some jazz music I found on YouTube.\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, set the volume to 7 and confirm."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, set the volume to 7 and confirm.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"volume.set\",\"value\": 7,\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"text\": \"The volume has been set to 7.\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, set the volume to 1000 and confirm."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, set the volume to 1000 and confirm.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"volume.set\",\"value\": 7,\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"text\": \"The volume has been set to the max of 10.\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, set the volume to -5 and confirm."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, set the volume to -5 and confirm.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"volume.set\",\"value\": 7,\"outputs\": [\"3\"]},\"3\": {\"type\": \"output.tts\",\"text\": \"The volume has been set to the minimum of 0.\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, turn the volume down to 3, then find a cooking tutorial on YouTube and share it on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, turn the volume down to 3, then find a cooking tutorial on YouTube and share it on Discord.\",\"outputs\": [\"2\", \"3\"]},\"2\": {\"type\": \"volume.set\",\"value\": 3},\"3\": {\"type\": \"youtube.search\",\"query\": \"cooking tutorial\",\"shuffle\": true,\"outputs\": [\"4\"]},\"4\": {\"type\": \"discord.post\",\"text\": \"Check out this cooking tutorial:\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"output.tts\",\"text\": \"The volume has been set to 3, and I've shared the cooking tutorial on Discord.\",\"outputs\": [\"6\"]},\"6\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, I want to tweet about the recent lunar eclipse. Can you help?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, I want to tweet about the recent lunar eclipse. Can you help?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"Sure, what would you like your tweet about the lunar eclipse to say?\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, create a Discord post about our upcoming gaming night."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Hey Billy, create a Discord post about our upcoming gaming night.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"Got it! Please provide the details for the gaming night Discord post.\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Okay Billy, I want to make a tweet about my new art piece but I'm not sure how to phrase it."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, I want to make a tweet about my new art piece but I'm not sure how to phrase it.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"user_text_prompt\",\"prompt\": \"Let's create a captivating tweet together! Can you describe the art piece in a few words?\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, find relaxing music for me."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, find relaxing music for me.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"relaxing music\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"youtube.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"output.tts\",\"text\": \"Here's some relaxing music I found on YouTube.\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Okay Billy, play Shape of You by Ed Sheeran on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, play Shape of You by Ed Sheeran on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"Shape of You Ed Sheeran official music video\",\"shuffle\": false,\"outputs\": [\"3\"]},\"3\": {\"type\": \"youtube.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Okay Billy, play Celebration by Mac Miller on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, play Celebration by Mac Miller on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"Celebration Mac Miller music video\",\"shuffle\": false,\"outputs\": [\"3\"]},\"3\": {\"type\": \"youtube.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, find relaxing ambient music and tweet it."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Hey Billy, find relaxing ambient music and tweet it.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"relaxing ambient music\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"twitter.post\",\"text\": \"Unwind with this relaxing ambient music playlist I discovered on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Yo Billy, find me a 20 minute full body workout video on YouTube and post it on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Yo Billy, find me a 20 minute full body workout video on YouTube and post it on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"20 minute full body workout\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\",\"text\": \"Stay fit! Here's a 20-minute full-body workout video I found on YouTube:\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, tell me a fortune on Discord."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, tell me a fortune on Discord.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"discord.post\",\"text\": \"Today is your lucky day! Fortune favors the bold.\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, let's play rock paper scissors in Discord chat."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, let's play rock paper scissors in Discord chat.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"discord.post\",\"text\": \"Let's see... I choose scissors!\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, flip a coin in Discord chat."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, flip a coin in Discord chat.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"discord.post\",\"text\": \"Flipping a coin... It's tails! 🪙\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, flip a coin in Discord chat."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, flip a coin in Discord chat.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"discord.post\",\"text\": \"Flipping a coin... It's heads! 🪙\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, tell me a fortune."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, tell me a fortune.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"Waves of creativity will flow through you today. Seize the moment to express and innovate!\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, let's play rock paper scissors."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, let's play rock paper scissors.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"Okay, I choose paper!\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, flip a coin."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, flip a coin.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"Flipping a coin... It's heads! 🪙\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, flip a coin."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, flip a coin.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"output.tts\",\"text\": \"Flipping a coin... It's tails! 🪙\",\"outputs\": [\"3\"]},\"3\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Ok Billy, what does a penguin sound like?"},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Ok Billy, what does a penguin sound like?\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"penguin sound effect\",\"shuffle\": false,\"outputs\": [\"3\"]},\"3\": {\"type\": \"sfx.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, I'd love to hear the sound of ocean waves."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, I'd love to hear the sound of ocean waves.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"ocean waves sound\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"sfx.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Ok Billy play crickets."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Ok Billy play crickets.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"crickets sound\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"sfx.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Ok Billy, play a fart sound."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Ok Billy, play a fart sound.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"fart sound effect\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"sfx.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Billy, I need a good laughter sound."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Billy, I need a good laughter sound.\",\"outputs\": [\"2\"]},\"2\": {\"type\": \"youtube.search\",\"query\": \"laughter sound effect\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"sfx.play\",\"outputs\": [\"4\"]},\"4\": {\"type\": \"done\"}}}"}]}
{"messages":[{"role":"system","content":"Create a JSON node graph for workflow actions:\n\n- Begin with 'input.voice' for initial voice commands.\n- Proceed with nodes relevant to the command's intent.\n- Use 'user_text_prompt' for essential text inputs.\n- Employ action nodes (e.g., 'twitter.post', 'discord.post', 'volume.up', 'youtube.search') for specific tasks.\n- Allow nodes to output to multiple successors.\n- Conclude each workflow with 'done'.\n\n- Searches should be excluded unless they are used later.\n- Do not use any kind of placeholder text.\n\nExample output:\n```{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Initial voice command.\",\"outputs\": [\"2\"]},\"N\": {\"type\": \"done\"}}}```\n\nNode Types:\n- input.voice: [No input; Outputs: String] User input node. Spoken.\n- user_text_prompt {prompt: String}: [Input: String; Outputs: String] Requests and outputs user text.\n- twitter.post {text: String}: [Input: String; Outputs: Boolean] Posts to Twitter, outputs confirmation.\n- discord.post {text: String}: [Input: String; Outputs: Boolean] Posts to Discord, outputs confirmation.\n- wolfram.simple {query: String}: [Input: String; Outputs: String] Queries data, outputs result. Use for dynamic things like weather, finance, math, time, sports, etc.\n- youtube.search {query: String, shuffle: Boolean}: [Input: String, Boolean; Outputs: Array] Searches YouTube, outputs video list.\n- youtube.play {video_id: String}: [Input: String; Outputs: Boolean] Plays YouTube video, outputs confirmation.\n- sfx.play {video_id: String}: [Input: String; Outputs: Boolean] Plays sound effect for 5s, outputs confirmation.\n- output.tts {text: String}: [Input: String; Outputs: Boolean] Converts text to speech. Outputs confirmation.\n- volume.up: [No input; Outputs: Boolean] Increases volume, outputs confirmation.\n- volume.down: [No input; Outputs: Boolean] Decreases volume, outputs confirmation.\n- volume.set {value: Integer}: [Input: Integer (0-10); Outputs: Boolean] Sets volume, outputs confirmation.\n- done: [No input, No output] Marks workflow completion.\n\nWorkflow Examples:\n1. Tweet Creation: 'input.voice' -> 'user_text_prompt' -> 'twitter.post' -> 'done'.\n2. Volume & Discord Meme Post: 'input.voice' -> 'volume.up' & 'giphy.search' -> 'discord.post' -> 'done'.\n3. YouTube Video Query: 'input.voice' -> 'youtube.search' -> 'discord.post' -> 'done'.\n\nEnsure workflows logically flow from 'input.voice' to 'done'."},{"role":"user","content":"Hey Billy, post a funny meme in Discord and then let's write a tweet."},{"role":"assistant","content":"{\"nodes\": {\"1\": {\"type\": \"input.voice\",\"text\": \"Post a funny meme in the discord and then let's write a tweet\",\"outputs\": [\"2\", \"4\"]},\"2\": {\"type\": \"giphy.search\",\"query\": \"funny meme\",\"shuffle\": true,\"outputs\": [\"3\"]},\"3\": {\"type\": \"discord.post\"},\"4\": {\"type\": \"user_text_prompt\",\"prompt\": \"What would you like to tweet?\",\"outputs\": [\"5\"]},\"5\": {\"type\": \"twitter.post\",\"outputs\": [\"6\"]},\"6\": {\"type\": \"done\"}}}"}]}
